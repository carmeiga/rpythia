library(readr)
for(i in 1:ev) {
temp <- read_table2("saida.txt", col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
View(out)
pt <- as.numeric(read_table2("pt.txt", col_names = FALSE)[1,])
pt
pt[length(pt)]
out$pt=pt[-length(pt)]
View(out)
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table("separadores.txt", quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2("saida.txt", col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2("pt.txt", col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2("xprod.txt", col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2("yprod.txt", col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2("zprod.txt", col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
# parenteses indican particulas intermediarias (desintegranse)
estables=subset(out, (name %in% estables_n))
unique(estables$name)
library(ggplot2)
ggplot(estables, aes(name)) + geom_bar()
plot(density(estables$pt))
plot(density(estables$pt[abs(estables$pt)<1]))
plot(density(estables$px[abs(estables$pt)<1]))
View(estables)
plot(density(estables$p_x[abs(estables$pt)<1]))
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table("separadores.txt", quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2("saida.txt", col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2("pt.txt", col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2("xprod.txt", col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2("yprod.txt", col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2("zprod.txt", col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
estables=subset(out, (name %in% estables_n))
unique(estables$name)
library(ggplot2)
ggplot(estables, aes(name)) + geom_bar()
View(estables)
plot(density(estables$pt[abs(estables$pt)<1 && estables$name=='gamma']))
View(estables)
plot(density(estables$pt[estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<5 )&& estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<0.01 )&& estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<0.001 )&& estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<0.001 )&& estables$name=='gamma']))
estables$pt[estables$name=='gamma']
plot(density(estables$pt[(abs(estables$pt)<0.001 )& estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<0.1)& estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<0.2)& estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<0.3)& estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<0.4)& estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<0.6)& estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<0.8)& estables$name=='gamma']))
plot(density(estables$pt[(abs(estables$pt)<2)& estables$name=='gamma']))
install.packages("vroom")
library(data.table)
?list.files
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "_h.txt$",
full.names = FALSE)
list_of_files
list_of_files[1]
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "_s.txt$",
full.names = FALSE)
list_of_files
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table(list_of_files[3], quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2(list_of_files[2], col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2(list_of_files[1], col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2(list_of_files[4], col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2(list_of_files[5], col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2(list_of_files[6], col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
# parenteses indican particulas intermediarias (desintegranse)
estables=subset(out, (name %in% estables_n))
unique(estables$name)
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "_s.txt$",
full.names = FALSE)
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table(list_of_files[3], quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2(list_of_files[2], col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2(list_of_files[1], col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2(list_of_files[4], col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2(list_of_files[5], col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2(list_of_files[6], col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
# parenteses indican particulas intermediarias (desintegranse)
estables=subset(out, (name %in% estables_n))
unique(estables$name)
library(ggplot2)
ggplot(estables, aes(name)) + geom_bar()
plot(density(estables$pt[(abs(estables$pt)<2)& estables$name=='gamma']))
pro="t"
paste("_",pro,".txt")
paste("_",pro,".txt",sep="")
pat=paste("_",pro,".txt$",sep="")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = pat,
full.names = FALSE)
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table(list_of_files[3], quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2(list_of_files[2], col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2(list_of_files[1], col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2(list_of_files[4], col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2(list_of_files[5], col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2(list_of_files[6], col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
# parenteses indican particulas intermediarias (desintegranse)
estables=subset(out, (name %in% estables_n))
unique(estables$name)
library(ggplot2)
ggplot(estables, aes(name)) + geom_bar()
mesmo_proceso<-function(pro) {
pat=paste("_",pro,".txt$",sep="")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = pat,
full.names = FALSE)
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table(list_of_files[3], quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2(list_of_files[2], col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2(list_of_files[1], col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2(list_of_files[4], col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2(list_of_files[5], col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2(list_of_files[6], col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
# parenteses indican particulas intermediarias (desintegranse)
estables=subset(out, (name %in% estables_n))
return(cbind(estables,rep(pro,nrow(estables))))
}
unique(estables$name)
mesmo_proceso(w)
mesmo_proceso<-function(pro) {
pat=paste("_",pro,".txt$",sep="")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = pat,
full.names = FALSE)
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table(list_of_files[3], quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2(list_of_files[2], col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2(list_of_files[1], col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2(list_of_files[4], col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2(list_of_files[5], col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2(list_of_files[6], col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
# parenteses indican particulas intermediarias (desintegranse)
estables=subset(out, (name %in% estables_n))
return(cbind(estables,rep(pro,nrow(estables))))
}
mesmo_proceso('w')
mesmo_proceso<-function(pro) {
pat=paste("_",pro,".txt$",sep="")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = pat,
full.names = FALSE)
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table(list_of_files[3], quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2(list_of_files[2], col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2(list_of_files[1], col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2(list_of_files[4], col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2(list_of_files[5], col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2(list_of_files[6], col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
# parenteses indican particulas intermediarias (desintegranse)
estables=subset(out, (name %in% estables_n))
return(cbind(estables,rep(pro,nrow(estables))))
}
w=mesmo_proceso('w')
View(w)
names(final)[21] <- "proc"
mesmo_proceso<-function(pro) {
pat=paste("_",pro,".txt$",sep="")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = pat,
full.names = FALSE)
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table(list_of_files[3], quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2(list_of_files[2], col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2(list_of_files[1], col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2(list_of_files[4], col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2(list_of_files[5], col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2(list_of_files[6], col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
# parenteses indican particulas intermediarias (desintegranse)
estables=subset(out, (name %in% estables_n))
final=cbind(estables,rep(pro,nrow(estables)))
names(final)[21] <- "proc"
return(final)
}
w=mesmo_proceso('w')
View(w)
estables=w
unique(estables$name)
View(estables)
t=mesmo_proceso('t',1)
mesmo_proceso<-function(pro,tot) {
pat=paste("_",pro,".txt$",sep="")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = pat,
full.names = FALSE)
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table(list_of_files[3], quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2(list_of_files[2], col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i+tot*ev,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2(list_of_files[1], col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2(list_of_files[4], col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2(list_of_files[5], col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2(list_of_files[6], col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
# parenteses indican particulas intermediarias (desintegranse)
estables=subset(out, (name %in% estables_n))
final=cbind(estables,rep(pro,nrow(estables)))
names(final)[21] <- "proc"
return(final)
}
t=mesmo_proceso('t',1)
View(t)
mesmo_proceso<-function(pro,tot) {
pat=paste("_",pro,".txt$",sep="")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = pat,
full.names = FALSE)
setwd("~/particarlos/pythia8303/rpythia")
separ=as.numeric(read.table(list_of_files[3], quote="\"", comment.char="")$V1)
n=length(separ)
ev=n/2-1
library(readr)
for(i in 1:ev) {
temp <- read_table2(list_of_files[2], col_names=FALSE,skip =(separ[2*i+1]+2),n_max=(separ[2*i+2]-separ[2*i+1]-5))
temp$ev=rep(i+tot*ev,nrow(temp))
if (i==1)
out=temp
else
out=rbind(out,temp)
}
nomes= c('no','id','name','status', 'mother1','mother2','daughter1','daughter2','colour1','colour2','p_x','p_y','p_z','e','m','ev')
colnames(out)=nomes
pt <- as.numeric(read_table2(list_of_files[1], col_names = FALSE)[1,])
out$pt=pt[-length(pt)]
x <- as.numeric(read_table2(list_of_files[4], col_names = FALSE)[1,])
out$x=x[-length(x)]
y <- as.numeric(read_table2(list_of_files[5], col_names = FALSE)[1,])
out$y=y[-length(y)]
z <- as.numeric(read_table2(list_of_files[6], col_names = FALSE)[1,])
out$z=z[-length(z)]
estables_n=c('e-','e+','mu+','mu-','K+','K-','pi+','pi-','p+','pbar-','n0','nbar0','gamma','K_L0')
# parenteses indican particulas intermediarias (desintegranse)
estables=subset(out, (name %in% estables_n))
final=cbind(estables,rep(pro,nrow(estables)))
names(final)[21] <- "proc"
return(final)
}
s=mesmo_proceso('t',0)
h=mesmo_proceso('h',1)
w=mesmo_proceso('w',2)
t=mesmo_proceso('t',3)
estables=rbind(s,h,w,t)
View(estables)
ggplot(estables, aes(name)) + geom_bar()
plot(density(estables$pt[(abs(estables$pt)<2)& estables$name=='gamma']))
View(estables)
unique(estables$name)
ggplot(estables, aes(name)) + geom_bar()
plot(density(estables$pt[(abs(estables$pt)<2)& (estables$name=='mu+' | estables$name=='mu-')]))
View(h)
names(estables)
aggregate(estables$e, list(estables$ev), sum)
?sweep
estables$e[1]
normalizacions=aggregate(estables$e, list(estables$ev), sum)
normalizado=estables
normalizado=estables
for(i in 1:nrow(estables)) {
normalizado$e[i]=estables$e[i]/normalizacions[i,2]
}
View(normalizado)
for(i in 1:length(normalizacions)) {
normalizado$e[estables$ev==i]=estables$e[i]/normalizacions[i,2]
}
estables=rbind(s,h,w,t)
normalizacions=aggregate(estables$e, list(estables$ev), sum)
normalizado=estables
for(i in 1:length(normalizacions)) {
normalizado$e[estables$ev==i]=estables$e[i]/normalizacions[i,2]
}
aggregate(normalizado$e, list(normalizado$ev), sum)
View(normalizacions)
normalizado=estables
for(i in 1:length(normalizacions)) {
normalizado$e[estables$ev==i]=estables$e[i]/normalizacions$x[i]
}
aggregate(normalizado$e, list(normalizado$ev), sum)
normalizado=estables
for(i in 1:length(normalizacions)) {
normalizado$e[estables$ev==i]=estables$e[estables$ev==i]/normalizacions$x[i]
}
aggregate(normalizado$e, list(normalizado$ev), sum)
estables$e[estables$ev==i]
sum(estables$e[estables$ev==i])
normalizado=estables
for(i in 1:nrow(normalizacions)) {
normalizado$e[estables$ev==i]=estables$e[estables$ev==i]/normalizacions$x[i]
}
aggregate(normalizado$e, list(normalizado$ev), sum)
hist(normalizado$e[estables$ev==2])
hist(normalizado$e[estables$ev==3])
hist(normalizado$e[estables$ev==10])
hist(normalizado$e[estables$ev==19])
hist(normalizado$e[estables$ev==17])
hist(normalizado$e[estables$ev==14])
hist(normalizado$e[estables$ev==9])
unique(estables$name)
View(normalizado)
proba1=normalizado[normalizado$e==1,(11:15)]
proba1=normalizado[normalizado$ev==1,(11:15)]
proba1=normalizado[normalizado$ev==1,(11:15)]
proba2=normalizado[normalizado$ev==2,(11:15)]
View(proba1)
View(proba1)
for(i in 1:n) {
for(j in 1:m)
custos[i,j]=minkowski(as.numeric(proba1[i,]),as.numeric(proba2[j,]))
}
n=nrow(proba1)
m=nrow(proba2)
custos=matrix(0,nrow=nrow(proba1),ncol=nrow(proba2))
minkowski<-function(cuadri1,cuadri2) {
return(-cuadri1[5]^2-cuadri2[5]^2-2*(-cuadri1[4]*cuadri2[4]+sum(cuadri1[1:3]*cuadri2[1:3])))
}
for(i in 1:n) {
for(j in 1:m){
custos[i,j]=minkowski(as.numeric(proba1[i,]),as.numeric(proba2[j,]))
}
}
View(custos)
wasserstein(proba1$e, proba2$e, p=1, tplan=NULL, costm=abs(custos))
install.packages("transport")
library(transport)
wasserstein(proba1$e, proba2$e, p=1, tplan=NULL, costm=abs(custos))
?wasserstein
wasserstein(proba1$e, proba2$e, p=1, tplan=NULL, costm=abs(custos),prob=TRUE)
wasserstein(proba1$e, proba2$e, p=2, tplan=NULL, costm=abs(custos),prob=TRUE)
